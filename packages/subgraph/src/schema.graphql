type Planet @entity {
  id: ID! # planetId from the contract
  planetName: String!
  planetImage: String!
  planetDescription: String!
  ruler: Bytes!
  products: [Product!]! @derivedFrom(field: "planet")
  approvalRequests: [ApprovalRequest!]! @derivedFrom(field: "planet")
}

type Product @entity {
  id: ID! # productId from the contract
  planet: Planet!
  productImage: String!
  seller: Bytes!
  quantity: BigInt!
  price: BigInt!
  sales: BigInt!
  purchases: [Purchase!]! @derivedFrom(field: "product")
}

type Purchase @entity {
  id: ID! # purchaseId from the contract
  product: Product!
  buyer: Bytes!
  seller: Bytes!
  amount: BigInt!
  isReleased: Boolean!
  isDelivered: Boolean!
  isRefunded: Boolean!
  timestamp: BigInt!
  appeal: Appeal @derivedFrom(field: "purchase")
}

type Appeal @entity {
  id: ID! # purchaseId from the contract
  purchase: Purchase!
  by: Bytes!
  timestamp: BigInt!
}

type ApprovalRequest @entity {
  id: ID! # approval request ID
  seller: Bytes!
  planet: Planet!
  status: String!
  timestamp: BigInt!
}

type ApprovedSeller @entity {
  id: ID! # combination of seller address and planet ID
  seller: Bytes!
  planet: Planet!
  approvedAt: BigInt!
}
